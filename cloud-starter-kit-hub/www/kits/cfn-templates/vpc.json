{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Distribution Bundle for AWS VPC & Network",
    "Metadata": {
        "License": "Apache-2.0",
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VPCCIDR",
                        "KeyName",
                        "BastionHostOS"
                    ]
                }
            ]
        }
    },
    "Parameters": {
        "VPCCIDR": {
            "Description": "Enter the CIDR value of your network in AWS",
            "Type": "String",
            "Default": "173.0.0.0/16"
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair"
        },
        "BastionHostOS": {
            "Description": "The latest Windows OS",
            "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
            "AllowedValues": [
                "/aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base",
                "/aws/service/ami-windows-latest/Windows_Server-2016-English-Full-Base",
                "/aws/service/ami-windows-latest/Windows_Server-2022-English-Full-Base"
            ],
            "Default": "/aws/service/ami-windows-latest/Windows_Server-2022-English-Full-Base"
        }
    },
    "Resources": {
        "myVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "VPCCIDR"
                },
                "EnableDnsSupport": true,
                "EnableDnsHostnames": true,
                "Tags": [
                    {
                        "Key": "stack",
                        "Value": "Network-Bundle"
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "VPC-Standard-${AWS::StackName}"
                        }
                    }
                ]
            }
        },
        "BastionSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "myVPC"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::GetAtt": [
                                        "myVPC",
                                        "CidrBlock"
                                    ]
                                },
                                10,
                                8
                            ]
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        2,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "BastionSubnet-${AWS::StackName}"
                        }
                    }
                ]
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "myVPC"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::GetAtt": [
                                        "myVPC",
                                        "CidrBlock"
                                    ]
                                },
                                10,
                                8
                            ]
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "PublicSubnet1-${AWS::StackName}"
                        }
                    }
                ]
            }
        },
        "PublicSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "myVPC"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        2,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::GetAtt": [
                                        "myVPC",
                                        "CidrBlock"
                                    ]
                                },
                                10,
                                8
                            ]
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "PublicSubnet2-${AWS::StackName}"
                        }
                    }
                ]
            }
        },
        "NATSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "myVPC"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        3,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::GetAtt": [
                                        "myVPC",
                                        "CidrBlock"
                                    ]
                                },
                                10,
                                8
                            ]
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "NATSubnet1-${AWS::StackName}"
                        }
                    }
                ]
            }
        },
        "NATSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "myVPC"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        4,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::GetAtt": [
                                        "myVPC",
                                        "CidrBlock"
                                    ]
                                },
                                10,
                                8
                            ]
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "NATSubnet2-${AWS::StackName}"
                        }
                    }
                ]
            }
        },
        "PrivateSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "myVPC"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        5,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::GetAtt": [
                                        "myVPC",
                                        "CidrBlock"
                                    ]
                                },
                                10,
                                8
                            ]
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "PrivateSubnet1-${AWS::StackName}"
                        }
                    }
                ]
            }
        },
        "PrivateSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "myVPC"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        6,
                        {
                            "Fn::Cidr": [
                                {
                                    "Fn::GetAtt": [
                                        "myVPC",
                                        "CidrBlock"
                                    ]
                                },
                                10,
                                8
                            ]
                        }
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "PrivateSubnet2-${AWS::StackName}"
                        }
                    }
                ]
            }
        },
        "StandardIG": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}-Standard-IG"
                        }
                    }
                ]
            }
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "myVPC"
                },
                "InternetGatewayId": {
                    "Ref": "StandardIG"
                }
            }
        },
        "PublicRT": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "myVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PublicRT"
                    }
                ]
            }
        },
        "PrivateRT": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "myVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PrivateRT"
                    }
                ]
            }
        },
        "NATRT1": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "myVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "NATRT1"
                    }
                ]
            }
        },
        "NATRT2": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "myVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "NATRT2"
                    }
                ]
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "StandardIG",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRT"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "StandardIG"
                }
            }
        },
        "NATRoute1": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "StandardIG",
            "Properties": {
                "RouteTableId": {
                    "Ref": "NATRT1"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NATGateway1"
                }
            }
        },
        "NATRoute2": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "StandardIG",
            "Properties": {
                "RouteTableId": {
                    "Ref": "NATRT2"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NATGateway2"
                }
            }
        },
        "BastionSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "BastionSubnet"
                },
                "RouteTableId": {
                    "Ref": "PublicRT"
                }
            }
        },
        "PublicSubnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PublicRT"
                }
            }
        },
        "PublicSubnet2RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                },
                "RouteTableId": {
                    "Ref": "PublicRT"
                }
            }
        },
        "PrivateSubnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PrivateRT"
                }
            }
        },
        "PrivateSubnet2RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet2"
                },
                "RouteTableId": {
                    "Ref": "PrivateRT"
                }
            }
        },
        "NATSubnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "NATSubnet1"
                },
                "RouteTableId": {
                    "Ref": "NATRT1"
                }
            }
        },
        "NATSubnet2RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "NATSubnet2"
                },
                "RouteTableId": {
                    "Ref": "NATRT2"
                }
            }
        },
        "NATGateway1": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "ElasticIPAddressNAT1",
                        "AllocationId"
                    ]
                },
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "NAT1-Standard"
                    }
                ]
            }
        },
        "ElasticIPAddressNAT1": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "VPC"
            }
        },
        "NATGateway2": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "ElasticIPAddressNAT2",
                        "AllocationId"
                    ]
                },
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "NAT2-Standard"
                    }
                ]
            }
        },
        "ElasticIPAddressNAT2": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "VPC"
            }
        },
        "Bastion": {
            "DependsOn": "AttachGateway",
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "InstanceType": "t3.small",
                "KeyName": {
                    "Ref": "KeyName"
                },
                "ImageId": {
                    "Ref": "BastionHostOS"
                },
                "NetworkInterfaces": [
                    {
                        "Description": "Primary network interface",
                        "DeviceIndex": "0",
                        "SubnetId": {
                            "Ref": "BastionSubnet"
                        },
                        "AssociatePublicIpAddress": true,
                        "GroupSet": [
                            {
                                "Ref": "BastionSecurityGroup"
                            }
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "Bastion-Server-${AWS::StackName}"
                        }
                    }
                ]
            }
        },
        "BastionSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "myVPC"
                },
                "GroupName": "Bastion Server Security Group",
                "GroupDescription": "RDP traffic",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 3389,
                        "ToPort": 3389,
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        }
    },
    "Outputs": {
        "BastionPublicIP": {
            "Description": "Public IP of the Bastion Host",
            "Value": {
                "Fn::GetAtt": [
                    "Bastion",
                    "PublicIp"
                ]
            }
        }
    }
}